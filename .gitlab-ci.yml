
default:
  tags:
    - shared-fi
  image: node

build-frontend:
  script: 
    - echo "Start building App"
    - cd frontend
    - npm install
    - npm run build
    - echo "Build successfully!"
  artifacts:
    expire_in: 1 hour
    paths:
      - build
      - node_modules/


lint-backend:
  script:
   - cd backend
   - npm ci --cache /npm/npm-cache --no-audit --prefer-offline
   - npx eslint --max-warnings 0 src/**/*.ts

lint-frontend:
  script:
   - cd frontend
   - npm ci --cache /npm/npm-cache --no-audit --prefer-offline
   - npx eslint --max-warnings 0 src/**/*.{ts,tsx}


format-check-frontend:
  script:
   - cd frontend
   - npm ci --cache /npm/npm-cache --no-audit --prefer-offline
   - npx prettier --check src/**/*.{ts,tsx}
  
format-check-backend:
  script:
   - cd backend
   - npm ci --cache /npm/npm-cache --no-audit --prefer-offline
   - npx prettier --check src/**/*.ts


typecheck-backend:
  script:
   - cd backend
   - npm ci --cache /npm/npm-cache --no-audit --prefer-offline
   - npx tsc --noEmit

deploy:
  image: kroniak/ssh-client
  before_script:
    - echo "deploying app"
  script:
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > key.pem
    - chmod 400 key.pem
    - cat key.pem
    - ssh -o StrictHostKeyChecking=no -i key.pem $PROD_SERVER_USER@$PROD_SERVER_ADDRESS "cd rooms && git pull && docker compose up --build --remove-orphans"

